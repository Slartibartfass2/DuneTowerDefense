name: Code Quality Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
          cache: 'gradle'

      - name: Build
        run: gradle --build-cache assemble

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: 'desktop/build/libs/**'
          if-no-files-found: error

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
          cache: 'gradle'

      - name: Test with coverage
        run: gradle jacocoTestReport --warning-mode all

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: test-artifacts
          path: |
            core/build/test-results/test/**
            core/build/reports/**
          if-no-files-found: error

  test-report:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Report test results
        id: test-results
        uses: dorny/test-reporter@v1.6.0
        with:
          artifact: test-artifacts
          name: JUnit Tests
          path: test-results/test/*.xml
          reporter: java-junit

      - name: Get the test result info
        run: |
          echo "Conclusion: ${{ steps.test-results.outputs.conclusion }}"
          echo "Passed: ${{ steps.test-results.outputs.passed }}"
          echo "Failed: ${{ steps.test-results.outputs.failed }}"
          echo "Skipped: ${{ steps.test-results.outputs.skipped }}"

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          title: JaCoCo Coverage
          update-comment: true

      - name: Get the coverage info
        run: |
          echo "Total coverage: ${{ steps.jacoco.outputs.coverage-overall }}"
          echo "Changed Files coverage: ${{ steps.jacoco.outputs.coverage-changed-files }}"
